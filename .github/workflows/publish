# This is a basic workflow to help you get started with Actions

name: Publish

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  release:
    types: [published]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  buildAndTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - name: test and build
        run: ./gradlew --console=plain build test
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARTOKEN }}

  slowTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - name: compose up
        run: cd docker/local && docker-compose up -d && sleep 10

      - name: test and build
        run: ./gradlew --console=plain build slowTests jacocoTestReport sonarqube
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARTOKEN }}

  snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --fail-on=all
  deploy:
    name: Deploy til produksjon
    needs: [buildAndTest,slowTests,snyk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: actions/download-artifact@v2
        with:
          name: helse-spion-artifact
          path: build
      - run: |
          git config --global user.email "helsearbeidsgiver@nav.no"
          git config --global user.name "HelseArbeidsgiver"
          npm version ${{ github.event.release.tag_name }}
          git push origin HEAD:master
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-sbs
          RESOURCE: deploy/prod.yaml
